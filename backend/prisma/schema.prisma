datasource db {
    provider = "postgresql"
    url      = env("POSTGRES_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Customer {
    id        String  @id @default(uuid())
    firstName String?
    email     String?
    orders    Order[]
}

model ProductCategory {
    id          String    @id @default(uuid())
    title       String
    slug        String
    createdDate DateTime  @default(now())
    updatedDate DateTime  @updatedAt
    imageId     String
    image       Image     @relation(fields: [imageId], references: [id])
    products    Product[]
}

model Product {
    id                String            @id @default(uuid())
    slug              String
    title             String
    description       String?
    sku               String?
    price             Float             @default(0)
    regularPrice      Float             @default(0)
    createdDate       DateTime          @default(now())
    updatedDate       DateTime          @updatedAt
    orderLineItems    OrderLineItem[]
    cartLineItems     CartLineItem[]
    images            Image[]
    productCategories ProductCategory[]
}

model Order {
    id          String          @id @default(uuid())
    customer    Customer        @relation(fields: [customerId], references: [id])
    customerId  String
    amount      Float
    status      String
    note        String
    lineItems   OrderLineItem[]
    createdDate DateTime        @default(now())
    updatedDate DateTime        @updatedAt
}

model OrderLineItem {
    id          String   @id @default(uuid())
    product     Product  @relation(fields: [productId], references: [id])
    productId   String
    quantity    Int
    price       Float
    totalPrice  Float
    createdDate DateTime @default(now())
    updatedDate DateTime @updatedAt
    order       Order    @relation(fields: [orderId], references: [id])
    orderId     String
}

model CartLineItem {
    id          String   @id @default(uuid())
    cartId      String
    productId   String
    quantity    Int
    price       Float
    totalPrice  Float
    createdDate DateTime @default(now())
    updatedDate DateTime @updatedAt
    cart        Cart     @relation(fields: [cartId], references: [id])
    product     Product  @relation(fields: [productId], references: [id])
}

model Cart {
    id        String         @id @default(uuid())
    amount    Float          @default(0)
    note      String?
    lineItems CartLineItem[]
}

model Image {
    id                String            @id @default(uuid())
    url               String
    fileName          String
    createdDate       DateTime          @default(now())
    updatedDate       DateTime          @updatedAt
    products          Product[]
    productCategories ProductCategory[]
}

model Blog {
    id          String   @id @default(uuid())
    title       String
    body        String
    createdDate DateTime @default(now())
    updatedDate DateTime @updatedAt
}
